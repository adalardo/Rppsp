% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighborsPointPattern.R
\name{pointPattern}
\alias{pointPattern}
\alias{xyTest}
\alias{limTest}
\alias{estimaThomas}
\alias{minContrast}
\title{Neighbours Functions and Spatial Point Patterns}
\usage{
xyTest(x, y)

limTest(x, y, xlim, ylim)

minContrast(xyStat, par)

estimaThomas(x, y, xlim, ylim, parIni = NULL)
}
\arguments{
\item{x, y}{Numeric vectors of cartesian coordinates of neighbor points.}

\item{xlim, ylim}{Numeric vectors with two values defining the 'x' and 'y' axis limit in the cartesian plane.}

\item{xyStat}{Point pattern statistics dataframe.}

\item{par}{Cluster Thomas process parameters: $\kappa$, $\sigma$.}

\item{parIni}{Initial parameters used by [optim()] to estimate Thomas Process parameters.}

\item{xc, yc}{Numeric scalar coordinates of focus point.}

\item{r}{Numeric neighborhood radius.}
}
\value{
The functions return graphics with the simulation results, and a
matrix with the population size for deterministic and stochastic models.
}
\description{
Functions to analysis population spatial arrangement and respective graphics
}
\details{
A set of functions to analysis point patterns process based on K-Ripley statistics for univariate and bivariate type of points. Originally these functions were coded for a study biological populations of sessils organisms, but can be apply for any cartesian mapping objects. Thoses functions are first coded for EcoVirtual Project  \url{http://ecovirtual.ib.usp.br}.

`neighbors` identifies neighbors around all points in a cartesian coordinate space.
`countNeighbors` counts the number of neighbors for each point for a given r distance.

`edgeData` torus border data adjustment.

`meanNeighbors`  calculate the mean number of neighbors for a sequence of r distances.

`meanNeighborsBi`  calculate the mean number of neighbors for a sequence of r distances for a bivariate points. First code represents the target points and second level code the neighbors points.

`ppStats` calculate K-Ripley, L-Ripley and O-Ring statistics for univariate points in a cartesian coordinate space for a sequence of r distances.

`ppStatsBi` calculate K-Ripley, L-Ripley and O-Ring statistics for bivariate points in a cartesian coordinate space for a sequence of r distances.

`minContrast`  calculate mininum contrasts for estimate parameters for cluster Thomas Process.

`estimaThomas` estimates the Thomas process function parameters

`envelopeSim` calculates Monte Carlo confidence envelops for complete spatial random or cluster Thomas process.

`envelopeSimBi` calculates Monte Carlo confidence envelops for complete spatial random bivariate point process.
}
\references{
Baddeley, A.; Rubak, E; Turner, R. 2016. Spatial Point Patterns: Methodology and Applications with R. CRC Press.
Wiegand, T. & Moloney, K.A. 2014. Handbook of Spatial Point-Pattern Analysis in Ecology. CRC Press.
}
\seealso{
\code{\link{metaComp}}, \url{http://ecovirtual.ib.usp.br}
}
\author{
Alexandre Adalardo de Oliveira \email{ecovirtualpackage@gmail.com}
}
\keyword{dynamics}
\keyword{population}
\keyword{simulation}
