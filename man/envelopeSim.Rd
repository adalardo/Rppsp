% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/neighborsPointPattern.R
\name{envelopeSim}
\alias{envelopeSim}
\alias{envelopeBi}
\alias{ppSim}
\title{Confidence enevelope for point pattern statistics}
\usage{
envelopeSim(
  x,
  y,
  xlim = c(0, 1),
  ylim = c(0, 1),
  rMax = NULL,
  step = NULL,
  type = c("K-Ripley", "L-Ripley", "O-Ring", "Thomas"),
  anima = TRUE,
  nsim = 200,
  interval = 0.95
)

envelopeBi(
  x,
  y,
  code,
  codeOrder = NULL,
  xlim = c(0, 1),
  ylim = c(0, 1),
  rMax = NULL,
  step = NULL,
  type = c("K-Ripley", "L-Ripley", "O-Ring"),
  anima = TRUE,
  nsim = 200,
  interval = 0.95
)

ppSim(
  npts = c(100, 0),
  xlim = c(0, 1),
  ylim = c(0, 1),
  simType = c("Random", "Cluster"),
  clusterSize = NULL,
  nClusters = NULL
)
}
\arguments{
\item{x, y}{Numeric vectors with 'x' and 'y' coordinates in a cartesian space. They must have the same length.}

\item{xlim, ylim}{Numeric vectors with two values defining the 'x' and 'y' axis limit in the cartesian plane.}

\item{rMax}{Maximum distance for neighborhood definition.}

\item{step}{Increase distance interval for neighborhood.}

\item{type}{Statistic to be evaluated. Character string of one of  those options:  'K-Ripley', 'L-Ripley',  'O-Ring' or 'Thomas'.}

\item{code}{Factor vector with two levels and same length as 'x' and 'y'}

\item{npts}{Integer vectors with one (univariate) or two values (bivariate). If there is zero in one of two values only the posite integer is considered.}

\item{ways}{Type of bivariate calculation: 'order' uses first levels as target points; 'reverse' uses second level as target points; 'both' calculate the two bivariates means.}
}
\value{
'ppStats' returns a data frame with numeric vectors. The first 'r' represents the neighborhood distance definition; '' the mean number of neighbors for each 'r' distance. This count uses the torus border correction.

'ppStats' returns a data frame with numeric vectors. The first 'r' represents the neighborhood distance definition; '' the mean number of neighbors for each 'r' distance. This count uses the torus border correction.
}
\description{
Compute 95\% confidence envelope for point pattern statistics (K-Ripley, L-Ripley and O-Ring), cluster process (Thomas) and  for a bivariate point pattern. Null distribution is based on simulation of complete spatial randomness for K-Ripey L-Ripley and O-Ring. Thomas process is based on random simulation of points using estimate parameters: $\kappa$ the intensity of clusters and $\sigma$ standard deviation position of point from the center of the cluster. Bivariate points patterns null model are simulated keeping pattern 1 points fixed and positioning points type 2 at random

Simulate catesian coordinate data 'x' and 'y' for randon (Poisson) point pattern and cluster process (Thomas) for uni or bivariate point pattern. Thomas process is based on random simulation of points using estimate parameters: number and size of clusters. Number of clusters could be given in two ways, using 'nCluster' parameters or, if this is 'NULL' provide by the number of code one points (parents).
}
\examples{
\dontrun{
envelopeSim(x = runif(100), y = runif(100), code = factor(rep(c("type1", "type2"), each = 50)), xlim = c(0,1), ylim = c(0,1), rMax = 0.25, step = 0.02, type = "K-Ripley")
}
\dontrun{
envelopeSim(x = runif(100), y = runif(100), code = factor(rep(c("type1", "type2"), each = 50)), xlim = c(0,1), ylim = c(0,1), rMax = 0.25, step = 0.02, type = "K-Ripley")
}
}
\references{
Baddeley, A.; Rubak, E; Turner, R. 2016. Spatial Point Patterns: Methodology and Applications with R. CRC Press.
Wiegand, T. & Moloney, K.A. 2014. Handbook of Spatial Point-Pattern Analysis in Ecology. CRC Press.

Baddeley, A.; Rubak, E; Turner, R. 2016. Spatial Point Patterns: Methodology and Applications with R. CRC Press.
Wiegand, T. & Moloney, K.A. 2014. Handbook of Spatial Point-Pattern Analysis in Ecology. CRC Press.
}
\author{
Alexandre Adalardo de Oliveira \email{aleadalardo@gmail.com}
}
\keyword{analysis}
\keyword{neighborhood}
